version: "3.9"

services:
  app:
    image: tomcat:10.1-jdk17
    container_name: clinique_app
    restart: unless-stopped
    depends_on:
      - db
      - builder          # on ne d√©pend plus du "service_healthy", juste du d√©marrage
    ports:
      - "8085:8080"
    environment:
      - DB_HOST=db
      - DB_PORT=5432
      - DB_DATABASE=clinique-db
      - DB_USER=clinique
      - DB_PASSWORD=clinique123
    volumes:
      - ./src/main/webapp:/usr/local/tomcat/webapps/ROOT
      - ./target/clinique-digitale-1.0-SNAPSHOT/WEB-INF/lib:/usr/local/tomcat/webapps/ROOT/WEB-INF/lib
      - ./libs/special-lib.jar:/usr/local/tomcat/webapps/ROOT/WEB-INF/lib/special-lib.jar
      - ./target/classes:/usr/local/tomcat/webapps/ROOT/WEB-INF/classes
    command: >
      bash -c "rm -f /usr/local/tomcat/webapps/ROOT.war && catalina.sh run"
    networks:
      - clinique_net

  db:
    image: postgres:15
    container_name: clinique_db
    restart: always
    environment:
      POSTGRES_USER: clinique
      POSTGRES_PASSWORD: clinique123
      POSTGRES_DB: clinique-db
    ports:
      - "5433:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./sql/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - clinique_net

  builder:
    image: maven:3.9.5-eclipse-temurin-17
    container_name: clinique_builder
    restart: unless-stopped
    working_dir: /usr/src/app
    volumes:
      - .:/usr/src/app
      - ./m2_cache:/root/.m2
    command: >
      bash -c "
        echo '‚öôÔ∏è  Build initial package (libs + classes)...' &&
        mvn -q -DskipTests -T 1C package || true && \
        echo 'üëÄ Watch & recompile every 2s...' && \
        while true; do \
          sleep 2; \
          mvn -q -DskipTests -o -T 1C compile >/dev/null 2>&1; \
        done
      "
    # healthcheck plus l√©ger et plus rapide (facultatif)
    healthcheck:
      test: ["CMD-SHELL", "test -d /usr/src/app/target/classes"]
      interval: 5s
      timeout: 3s
      start_period: 10s
      retries: 5
    networks:
      - clinique_net

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: clinique_pgadmin
    restart: always
    depends_on:
      - db
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@clinique.com
      - PGADMIN_DEFAULT_PASSWORD=admin123
    ports:
      - "8090:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - clinique_net

networks:
  clinique_net:

volumes:
  db_data:
  pgadmin_data: